<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:salesforce-composite="http://www.mulesoft.org/schema/mule/salesforce-composite" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/salesforce-composite http://www.mulesoft.org/schema/mule/salesforce-composite/current/mule-salesforce-composite.xsd">
	<!-- [STUDIO:"credit_details"]<flow name="credit_details" doc:id="0e3ac2cc-837c-41c1-a2e1-e44a4109c7f4" >
		<scheduler doc:name="Scheduler" doc:id="16871009-5f1c-40bb-a5ad-a78f3e03b8f3" >
			<scheduling-strategy >
				<fixed-frequency frequency="30" timeUnit="MINUTES"/>
			</scheduling-strategy>
		</scheduler>
		<ee:transform doc:name="jobRun" doc:id="5136013e-75d7-4154-a7ba-7569af6ec223" >
			<ee:message />
			<ee:variables >
				<ee:set-variable variableName="jobRun" ><![CDATA[%dw 2.0
import * from dw::core::Strings

fun year(date) =
  (date as Date).year

fun dayOfyear(date) =
  (date as Date).dayOfYear

fun C_value(date) =
  floor((year(date) - 1900) / 100)

fun JulianDate(date) =
  {
    date: C_value(date) ++ (year(date) as String)[2 to 3&#93; ++ leftPad(dayOfyear(date), 3, "0"),
    time: (((date.hour / 24) + (date.minutes / 1440) + (date.seconds / 86400)) splitBy ".")[-1&#93;
  }
output application/json  
&#45;&#45;-
JulianDate(now())&#93;&#93;></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<os:retrieve doc:id="96d728f2-55c3-4bf4-bff3-ec21d2181599" key="previousJobRun" target="previousJobRun" doc:name="Retrieve :previousJobRun" >
			<os:default-value ><![CDATA[#[vars.jobRun&#93;&#93;&#93;></os:default-value>
		</os:retrieve>
		<flow-ref doc:name="credit_detailSub_Flow" doc:id="13cf115d-727b-4d39-badd-265ba66d1ba1" name="credit_detailSub_Flow" />
		<os:store doc:id="76f95675-9f02-41c7-b8f5-cda6ad77864f" key="previousJobRun" doc:name="Store current job run details" >
			<os:value ><![CDATA[#[vars.jobRun&#93;&#93;&#93;></os:value>
		</os:store>
	</flow> [STUDIO] -->
	<!-- [STUDIO:"credit_detailSub_Flow"]<sub-flow name="credit_detailSub_Flow" doc:id="c927517a-2606-407e-ae64-105d133095d3">
		<logger level="INFO" doc:name="Start Logger" doc:id="4eaab530-0ae8-4e44-98a0-d018606d0013" message='#["Credit details start flow"&#93;'/>
		<ee:transform doc:name="Credit Details Query" doc:id="59b2feb9-359c-435f-85bb-c8069ef17d78">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output text/plain
&#45;&#45;-
" SELECT
    f1.SDAEXP,
    f1.SDKCOO,
    f1.SDUNCS,
    f1.SDDGL,
    f1.SDVR01,
    f1.SDDCTO,
    f1.SDUPRC,
    f1.SDLITM,
    f1.SDDOCO,
    f1.SDLNID,
    f1.SDUORG,
    f1.SDSOQS,
    f1.SDCRCD,
    f1.SDSHAN,
    f2.IMDRAW,
    f3.AXDC,
    f4.BPUPRC,
    f5.IVCITM,
    f6.IBPRP1,
    f6.IBSRP4
FROM
    TESTDTA.F4211 f1
LEFT JOIN
    TESTDTA.F4101 f2
    ON trim(f2.IMLITM) = trim(f1.SDLITM)
FULL OUTER JOIN  TESTDTA.F4780 f3
      ON trim(f3.AXAN8) = trim(f1.SDSHAN)
      AND trim(f3.AXXRTS) = 'SF'
LEFT JOIN
    TESTDTA.F4106 f4
    ON TRIM(f4.BPAN8) = '0' 
    AND TRIM(f4.BPLITM) = trim(f1.SDLITM) 
    AND TRIM(f4.BPMCU) = '1801' 
    AND TRIM(f4.BPEFTJ) <= $(vars.jobRun.date) 
    AND TRIM(f4.BPEXDJ) >= $(vars.jobRun.date)
LEFT JOIN
    TESTDTA.F4104 f5
    ON TRIM(f5.IVXRT) = 'C'
    AND TRIM(f5.IVAN8) = trim(f1.SDAN8)
    AND TRIM(f5.IVLITM) = trim(f1.SDLITM)
    AND TRIM(f5.IVEFTJ) <= $(vars.jobRun.date)
    AND TRIM(f5.IVEXDJ) >= $(vars.jobRun.date)
LEFT JOIN
    TESTDTA.F4102 f6
       ON TRIM(f6.IBLITM) = trim(f1.SDLITM)
        AND TRIM(f6.IBMCU) = '1801'
WHERE
    trim(f1.SDUPMJ) >= $(vars.jobRun.date)
    AND trim(f1.SDTDAY) < $(vars.previousJobRun.time) AND 
 trim(f1.SDKCOO) = '00010' AND trim(f1.SDLNTY) = 'RC' AND
trim(f1.SDDCTO) = 'CR' AND
(trim(f1.SDVR01) LIKE '%CP-MCA%' or trim(f1.SDVR01) LIKE '%CP-CPA%')"&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:select doc:name="Execute Sql Query" doc:id="ac2f9ae6-bccd-43bf-9b03-370487f2f6c4" config-ref="Database_Config">
			<db:sql><![CDATA[#[payload&#93;&#93;&#93;></db:sql>
		</db:select>
		<ee:transform doc:name="Transformation" doc:id="6e1274e6-89ac-4fb1-9153-daa2bc18a8aa">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
fun julianDateToNormalDate(julianDate) = 
	(((19 + (julianDate[0&#93; as Number))* 100) default "" 
	+ (julianDate[1 to 2&#93; as Number) default "" ++ julianDate[3 to 5&#93; default "")
	as Date {format: "yyyyDDD"} as Date {format:"yyyy-MM-dd"} default null
&#45;&#45;-
payload map ((item, index) -> 
 {
    "Account_Name__c": trim(item.AXDC),   //Id 
    "Amount__c": trim(item.SDAEXP)/100 default "",   //currency
    "Company_Number__c": trim(item.SDKCOO),   //string
    "Cost_when_parts_ship__c": trim(item.SDUNCS)/10000 default "",   //currency
    "Actual_Ship_Date__c": julianDateToNormalDate(trim(item.SDDGL))as Date default null,   //date
    "Customer_Part_Number__c": trim(item.IVCITM),   //string
    "IWD_Amount__c":
    ((((trim(item.BPUPRC))/10000) default null )*(trim(item.SDUORG))) default null,    //currency 
    "IWD_Price__c": (trim(item.BPUPRC )/10000)  default null, //currency
    "JDE_Account__c": trim(item.SDSHAN),   //string 
    "JDE_Order_Type__c": trim(item.SDDCTO),   //string
    "Line__c": (trim(item.SDVR01 ) )default "" ++ ":" ++ "(" ++ trim(item.SDDOCO) default "" ++ "-" ++ ((trim(item.SDLNID)/1000)) default null ++ ")" default null,   //string [EXTERNAL ID&#93;

    "Line_Amount__c": trim(item.SDAEXP)/100 default null,   //currency
    "Line_Price__c": trim(item.SDUPRC)/10000 default null,   //currency

    "Net_Sales_Amount__c": ((((((trim(item.BPUPRC))/10000) default null )*(trim(item.SDUORG))) default null)- ((trim(item.SDAEXP)))) default null,   //currency
    "NTN_Part__c": trim(item.SDLITM),   //string
    "Order__c": trim(item.SDDOCO) as Number,   //number (0 dec)
    "Order_Line__c": (trim(item.SDLNID)/1000) as Number default null,   //number (3 dec)
    "Order_Line_Qty__c": trim(item.SDUORG) as Number,   //number (0 dec)
    "PO__c": trim(item.SDVR01),   //string
    "Product_Part__c": trim(item.IMDRAW) default "" ++ "-" ++ trim(item.IBPRP1) default "" ++ "-" ++ trim(item.IBSRP4) default "",   //string 
    "Quantity__c": trim(item.SDSOQS) as Number,   //number (0 dec)
    "Rebate_Number__c": if (trim(item.SDVR01) contains  "MCA") ((trim(item.SDVR01) splitBy  "MCA" )[1&#93;)[0 to 6&#93; else if (trim(item.SDVR01) contains  "CPA") ((trim(item.SDVR01) splitBy  "CPA" )[1&#93;)[0 to 6&#93; else "" , //lookup
    "Rebate_Type__c": trim(item.IMDRAW) default "" ++ "-" ++ trim(item.IBPRP1)default "" ++ "-" ++ trim(item.IBSRP4) default "",   //string
  
    "CurrencyIsoCode": trim(item.SDCRCD),   //string

    "Name":  trim(item.SDVR01) default "" ++ ":" ++ "(" ++ trim(item.SDDOCO) default "" ++ "-" ++ (trim(item.SDLNID)/1000) default "" ++ ")"  //string
  } )&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="Choice" doc:id="6fb47a36-4acf-4d2e-8dba-790fd12d6980" >
			<when expression="#[sizeOf(payload)&gt;0&#93;">
				<logger level="INFO" doc:name="salesforcepayload" doc:id="9725dcb7-1f6b-4f08-8f70-d3962e4b9598" message="#[payload&#93;" />
				<logger level="INFO" doc:name="Total Records Logger" doc:id="128122f9-5ba6-4ebe-ab89-802192432f69" message="Total Records available: #[sizeOf(payload)&#93;" />
				<ee:transform doc:name="For Each Variable" doc:id="ac36bbce-c34c-4843-b5b5-95f7feafb54f">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
(payload) filter ((item, index) -> !isEmpty(item."Rebate_Number__c") )&#93;&#93;></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="FEPayload"><![CDATA[output application/json
&#45;&#45;-
{
   "creditUpdateTotalSuccessRecords" : 0 ,
   "creditUpdateTotalFailureRecords" : 0
}&#93;&#93;></ee:set-variable>
			</ee:variables>
		</ee:transform>
				<logger level="INFO" doc:name="Distinct Records Logger" doc:id="d876aa6d-54e1-4917-ab4d-a2233deff684" message="Records available with Rebate_NUmber: #[sizeOf(payload)&#93;" />
				<flow-ref doc:name="compositeRequestSubflow" doc:id="989fb36d-3842-48f4-8a1f-5779726e6767" name="compositeRequestSubflow" />
				<ee:transform doc:name="Response Payload" doc:id="e0edde65-aa82-46e4-9c26-8f040894ad0d">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
vars.FEPayload 
&#93;&#93;></ee:set-payload>
			</ee:message>
		</ee:transform>
				<logger level="INFO" doc:name="End Logger" doc:id="4b945e92-3ec7-4e23-813f-11c638d923a6" message='#[{"credit details end flow" : vars.FEPayload }&#93;' />
			</when>
			<otherwise >
				<logger level="INFO" doc:name="no input" doc:id="0ae518fd-0b7a-4884-b6e8-55e3d1a34ef8" message='no records are available to process'/>
			</otherwise>
		</choice>
	</sub-flow> [STUDIO] -->
	<flow name="compositeRequestSubflow" doc:id="a24da3dd-a469-409b-87a4-eed844c99e6a" >
		<foreach doc:name="For Each" doc:id="4e17b195-d50f-4678-a48c-85f733a1d771" batchSize="2">
			<ee:transform doc:name="Salesforce Request" doc:id="5785bd42-22fa-410f-87d5-cfa8d4cd6844">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{ 
  "compositeRequest": flatten(((payload map([
    ({
      "method": "GET",
      "referenceId": "refAccount$($$)",
      "url": "/services/data/v57.0/query/?q=SELECT id from Account where JDE_AddressNumber__c = $($.JDE_Account__c)"
    }) if(!isEmpty($.JDE_Account__c)),
    ({
      "method": "GET",
      "referenceId": "refRebate$($$)",
      "url": "/services/data/v57.0/query/?q=SELECT id from Rebate__c where RebateNumberText__c = '$($.Rebate_Number__c)'"
    } ) if(!isEmpty($.Rebate_Number__c)),
    {
      "method": "POST",
      "referenceId": "refUpdateCreditDetails$($$)",
      "url": "/services/data/v57.0/sobjects/Rebate_Credit_Summary__c",
      "body": {
      	
    "Account_Name__c": if(!isEmpty($.Account_Name__c))($.Account_Name__c) else "@{refAccount$($$).records[0].Id}",
    "Amount__c": $.Amount__c,
    "Company_Number__c": $.Company_Number__c,
    "Cost_when_parts_ship__c": $.Cost_when_parts_ship__c,
    "Actual_Ship_Date__c": $.Actual_Ship_Date__c,
    "Customer_Part_Number__c": $.Customer_Part_Number__c,
    "IWD_Amount__c": $.IWD_Amount__c,
    "IWD_Price__c": $.IWD_Price__c,
    "JDE_Account__c":$.JDE_Account__c,
    "JDE_Order_Type__c": $.JDE_Order_Type__c,
    "Line__c": $.Line__c,
    "Line_Amount__c": $.Line_Amount__c,
    "Line_Price__c": $.Line_Price__c,
    "Net_Sales_Amount__c": $.Net_Sales_Amount__c,
    "NTN_Part__c": $.NTN_Part__c,
    "Order__c": $.Order__c,
    "Order_Line__c": $.Order_Line__c,
    "Order_Line_Qty__c": $.Order_Line_Qty__c,
    "PO__c": $.PO__c,
    "Product_Part__c": $.Product_Part__c,
    "Quantity__c": $.Quantity__c,
    "Rebate_Number__c": if(!isEmpty($.Rebate_Number__c))"@{refRebate$($$).records[0].Id}" else "",      
    "Rebate_Type__c": $.Rebate_Type__c,                
    "CurrencyIsoCode": $.CurrencyIsoCode,
    "Name": $.Name
      }
    }]
    
  ))))
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<salesforce-composite:execute-composite-request doc:name="Execute composite request" doc:id="b67387f5-9398-44c1-a9c6-60be8cac8ab3" config-ref="Salesforce_Composite_Config">
			<reconnect />
		</salesforce-composite:execute-composite-request>
			<choice doc:name="Choice" doc:id="f00f3aa4-26c1-40bb-9dc1-d8ad087eae8f">
							<when expression='#[isEmpty((payload.compositeResponse filter ((item) -&gt; item.referenceId contains "refUpdateCreditDetails") default "").body..message[0])]'>
					<ee:transform doc:name="Salesforce Response" doc:id="6e038d5e-845e-47f1-8277-d305808cebb1">
				<ee:message>
				</ee:message>
				<ee:variables>
					<ee:set-variable variableName="FEPayload"><![CDATA[%dw 2.0
output application/json indent=false
var creditDetailsRef = payload.compositeResponse filter ((item) -> item.referenceId contains "refUpdateCreditDetails" )
var success = sizeOf(creditDetailsRef.body.success filter ($))
var failure = sizeOf(creditDetailsRef.body.success filter (!$))
---
{
   "creditUpdateTotalSuccessRecords" : success + (vars.FEPayload.creditUpdateTotalSuccessRecords),
   "creditUpdateTotalFailureRecords" : failure + (vars.FEPayload.creditUpdateTotalFailureRecords)
}]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
					<logger level="INFO" doc:name="compositeResponse" doc:id="121f2d30-a129-40e9-b9b8-8050c71902f4" message="Counter No: #[vars.counter] SFResponse : #[vars.FEPayload]" />
							</when>
				<otherwise>
					<logger level="INFO" doc:name="sf response" doc:id="3d9c67c3-72a1-4270-8fb8-856461d5a80b" message='#[{"message":"error while sending to SF","reason":(payload.compositeResponse filter ((item) -&gt; item.referenceId contains "refUpdateCreditDetails") default "").body..message}]' />
							</otherwise>
						</choice>
		</foreach>
	</flow>
</mule>
